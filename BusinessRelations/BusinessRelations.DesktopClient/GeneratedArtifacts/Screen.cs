//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class CollaborateursEditGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private CollaborateursEditGrid() : base("LightSwitchApplication.BusinessRelations.DesktopClient:CollaborateursEditGrid")
        {
            global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static CollaborateursEditGrid CreateInstance()
        {
            return new global::LightSwitchApplication.CollaborateursEditGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CollaborateursEditGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CollaborateursEditGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CollaborateursEditGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CollaborateursEditGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CollaborateursEditGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CollaborateursEditGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CollaborateursEditGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Collaborateurs_SelectionChanged();

        partial void Collaborateurs_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Collaborateurs_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Collaborateurs visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Collaborateur> Collaborateurs
        {
            get
            {
                return global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.PropertySetProperties.Collaborateurs);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Collaborateurs_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the gridAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void gridAddAndEditNew()
        {
            this.Details.Methods.gridAddAndEditNew.CreateInvocation().Execute();
        }
        partial void gridAddAndEditNew_CanExecute(ref bool result);
        partial void gridAddAndEditNew_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.PropertySet, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.CommandSet, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.PropertySetProperties.Collaborateurs;
                var initializeCommandEntry = global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.CommandSetProperties.gridAddAndEditNew;
                var initializeMethodEntry = global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.MethodSetProperties.gridAddAndEditNew;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass>.Entry
                __CollaborateursEditGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.__CollaborateursEditGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.__CollaborateursEditGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.__CollaborateursEditGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.__CollaborateursEditGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.__CollaborateursEditGrid_InvokeCreated,
                    global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.__CollaborateursEditGrid_InvokeActivated,
                    global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.__CollaborateursEditGrid_InvokeSaveErrorEvent);
            private static void __CollaborateursEditGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.CollaborateursEditGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.CollaborateursEditGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __CollaborateursEditGrid_InvokeSavingEvent(global::LightSwitchApplication.CollaborateursEditGrid s)
            {
                bool handled = false;
                s.CollaborateursEditGrid_Saving(ref handled);
                return handled;
            }
            private static void __CollaborateursEditGrid_InvokeSavedEvent(global::LightSwitchApplication.CollaborateursEditGrid s)
            {
                s.CollaborateursEditGrid_Saved();
            }
            private static bool __CollaborateursEditGrid_InvokeClosingEvent(global::LightSwitchApplication.CollaborateursEditGrid s)
            {
                bool cancel = false;
                s.CollaborateursEditGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __CollaborateursEditGrid_InvokeCreated(global::LightSwitchApplication.CollaborateursEditGrid s)
            {
                s.CollaborateursEditGrid_Created();
            }
            private static void __CollaborateursEditGrid_InvokeActivated(global::LightSwitchApplication.CollaborateursEditGrid s)
            {
                s.CollaborateursEditGrid_Activated();
            }
            private static bool __CollaborateursEditGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.CollaborateursEditGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.CollaborateursEditGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable CollaborateursQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Collaborateurs;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass, global::LightSwitchApplication.Collaborateur>.Data _Collaborateurs;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass>.Data _gridAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass>.Data _gridAddAndEditNewMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass, global::LightSwitchApplication.Collaborateur> Collaborateurs
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass, global::LightSwitchApplication.Collaborateur>)base.GetItem(global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.PropertySetProperties.Collaborateurs);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass> gridAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.CommandSetProperties.gridAddAndEditNew);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass> gridAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.MethodSetProperties.gridAddAndEditNew);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass, global::LightSwitchApplication.Collaborateur>.Entry
                    Collaborateurs = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass, global::LightSwitchApplication.Collaborateur>.Entry(
                        "Collaborateurs",
                        global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.PropertySetProperties._Collaborateurs_Stub,
                        global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.PropertySetProperties._Collaborateurs_Validate,
                        global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.PropertySetProperties._Collaborateurs_CreateQuery,
                        global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.PropertySetProperties._Collaborateurs_SelectionChanged,
                        global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.PropertySetProperties._Collaborateurs_OnCollectionChanged,
                        global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.PropertySetProperties._Collaborateurs_OnLoaded);
                private static void _Collaborateurs_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass, global::LightSwitchApplication.Collaborateur>.Data> c, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Collaborateurs, sf);
                }
                private static void _Collaborateurs_Validate(global::LightSwitchApplication.CollaborateursEditGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Collaborateurs_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Collaborateurs_CreateQuery(global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass d, object[] args)
                {
                    return d.CollaborateursQuery();
                }
                private static void _Collaborateurs_SelectionChanged(global::LightSwitchApplication.CollaborateursEditGrid s)
                {
                    s.Collaborateurs_SelectionChanged();
                }
                private static void _Collaborateurs_OnCollectionChanged(global::LightSwitchApplication.CollaborateursEditGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Collaborateurs_Changed(e);
                }
                private static void _Collaborateurs_OnLoaded(global::LightSwitchApplication.CollaborateursEditGrid s, bool succeeded)
                {
                    s.Collaborateurs_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass>.Entry
                    gridAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass>.Entry(
                        "gridAddAndEditNew",
                        global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.CommandSetProperties._gridAddAndEditNew_Stub,
                        global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.CommandSetProperties._gridAddAndEditNew_CreateExecutableObject);
                private static void _gridAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass>.Data> c, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _gridAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass)d).Methods.gridAddAndEditNew.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass>.Entry
                    gridAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass>.Entry(
                        "gridAddAndEditNew",
                        global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.MethodSetProperties._gridAddAndEditNew_Stub,
                        global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.MethodSetProperties._gridAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass.MethodSetProperties._gridAddAndEditNew_InvokeMethod);
                private static void _gridAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CollaborateursEditGrid, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass>.Data> c, global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _gridAddAndEditNew_CanInvoke(global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.gridAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _gridAddAndEditNew_InvokeMethod(global::LightSwitchApplication.CollaborateursEditGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.gridAddAndEditNew_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class CommercialsDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private CommercialsDetail(int CommercialId) : base("LightSwitchApplication.BusinessRelations.DesktopClient:CommercialsDetail")
        {
                this.CommercialId = CommercialId;
            global::LightSwitchApplication.CommercialsDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static CommercialsDetail CreateInstance(int CommercialId)
        {
            return new global::LightSwitchApplication.CommercialsDetail(
                        CommercialId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommercialsDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommercialsDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommercialsDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommercialsDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommercialsDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommercialsDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommercialsDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Commercial_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Commercial_Loaded(bool succeeded);

        partial void CommercialId_Changed();

        partial void Missions_SelectionChanged();

        partial void Missions_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Missions_Loaded(bool succeeded);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Commercial Commercial
        {
            get
            {
                return global::LightSwitchApplication.CommercialsDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties.Commercial);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Commercial_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int CommercialId
        {
            get 
            {
                return global::LightSwitchApplication.CommercialsDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties.CommercialId);
            }
            set
            {
                global::LightSwitchApplication.CommercialsDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties.CommercialId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommercialId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Missions visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Mission> Missions
        {
            get
            {
                return global::LightSwitchApplication.CommercialsDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties.Missions);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Missions_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass, global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySet, global::LightSwitchApplication.CommercialsDetail.DetailsClass.CommandSet, global::LightSwitchApplication.CommercialsDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties.Commercial;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass>.Entry
                __CommercialsDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.CommercialsDetail.DetailsClass.__CommercialsDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.CommercialsDetail.DetailsClass.__CommercialsDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.CommercialsDetail.DetailsClass.__CommercialsDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.CommercialsDetail.DetailsClass.__CommercialsDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.CommercialsDetail.DetailsClass.__CommercialsDetail_InvokeCreated,
                    global::LightSwitchApplication.CommercialsDetail.DetailsClass.__CommercialsDetail_InvokeActivated,
                    global::LightSwitchApplication.CommercialsDetail.DetailsClass.__CommercialsDetail_InvokeSaveErrorEvent);
            private static void __CommercialsDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.CommercialsDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.CommercialsDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __CommercialsDetail_InvokeSavingEvent(global::LightSwitchApplication.CommercialsDetail s)
            {
                bool handled = false;
                s.CommercialsDetail_Saving(ref handled);
                return handled;
            }
            private static void __CommercialsDetail_InvokeSavedEvent(global::LightSwitchApplication.CommercialsDetail s)
            {
                s.CommercialsDetail_Saved();
            }
            private static bool __CommercialsDetail_InvokeClosingEvent(global::LightSwitchApplication.CommercialsDetail s)
            {
                bool cancel = false;
                s.CommercialsDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __CommercialsDetail_InvokeCreated(global::LightSwitchApplication.CommercialsDetail s)
            {
                s.CommercialsDetail_Created();
            }
            private static void __CommercialsDetail_InvokeActivated(global::LightSwitchApplication.CommercialsDetail s)
            {
                s.CommercialsDetail_Activated();
            }
            private static bool __CommercialsDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.CommercialsDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.CommercialsDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.CommercialsDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.CommercialsDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable MissionsQuery()
            {
                if (this.Screen.Commercial == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Mission> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Mission>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Commercial.Details.Properties.Missions).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Collaborateur");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass, global::LightSwitchApplication.Commercial>.Data _Commercial;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass, int>.Data _CommercialId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass, global::LightSwitchApplication.Mission>.Data _Missions;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass, global::LightSwitchApplication.Commercial> Commercial
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass, global::LightSwitchApplication.Commercial>)base.GetItem(global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties.Commercial);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass, int> CommercialId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties.CommercialId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass, global::LightSwitchApplication.Mission> Missions
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass, global::LightSwitchApplication.Mission>)base.GetItem(global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties.Missions);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass, global::LightSwitchApplication.Commercial>.Entry
                    Commercial = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass, global::LightSwitchApplication.Commercial>.Entry(
                        "Commercial",
                        global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties._Commercial_Stub,
                        global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties._Commercial_Validate,
                        global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties._Commercial_CreateQuery,
                        global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties._Commercial_OnValueChanged,
                        global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties._Commercial_OnLoaded);
                private static void _Commercial_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CommercialsDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass, global::LightSwitchApplication.Commercial>.Data> c, global::LightSwitchApplication.CommercialsDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Commercial, sf);
                }
                private static void _Commercial_Validate(global::LightSwitchApplication.CommercialsDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Commercial_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Commercial_CreateQuery(global::LightSwitchApplication.CommercialsDetail.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Commercial_OnValueChanged(global::LightSwitchApplication.CommercialsDetail s)
                {
                    s.Commercial_Changed();
                }

                private static void _Commercial_OnLoaded(global::LightSwitchApplication.CommercialsDetail s, bool succeeded)
                {
                    s.Commercial_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass, int>.Entry
                    CommercialId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass, int>.Entry(
                        "CommercialId",
                        false,
                        global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties._CommercialId_Stub,
                        global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties._CommercialId_Validate,
                        global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties._CommercialId_OnValueChanged);
                private static void _CommercialId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CommercialsDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.CommercialsDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._CommercialId, sf);
                }
                private static void _CommercialId_Validate(global::LightSwitchApplication.CommercialsDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.CommercialId_Validate(r);
                }
                private static void _CommercialId_OnValueChanged(global::LightSwitchApplication.CommercialsDetail s)
                {
                    s.CommercialId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass, global::LightSwitchApplication.Mission>.Entry
                    Missions = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass, global::LightSwitchApplication.Mission>.Entry(
                        "Missions",
                        global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties._Missions_Stub,
                        global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties._Missions_Validate,
                        global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties._Missions_CreateQuery,
                        global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties._Missions_SelectionChanged,
                        global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties._Missions_OnCollectionChanged,
                        global::LightSwitchApplication.CommercialsDetail.DetailsClass.PropertySetProperties._Missions_OnLoaded);
                private static void _Missions_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CommercialsDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CommercialsDetail, global::LightSwitchApplication.CommercialsDetail.DetailsClass, global::LightSwitchApplication.Mission>.Data> c, global::LightSwitchApplication.CommercialsDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Missions, sf);
                }
                private static void _Missions_Validate(global::LightSwitchApplication.CommercialsDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Missions_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Missions_CreateQuery(global::LightSwitchApplication.CommercialsDetail.DetailsClass d, object[] args)
                {
                    return d.MissionsQuery();
                }
                private static void _Missions_SelectionChanged(global::LightSwitchApplication.CommercialsDetail s)
                {
                    s.Missions_SelectionChanged();
                }
                private static void _Missions_OnCollectionChanged(global::LightSwitchApplication.CommercialsDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Missions_Changed(e);
                }
                private static void _Missions_OnLoaded(global::LightSwitchApplication.CommercialsDetail s, bool succeeded)
                {
                    s.Missions_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class CommercialsEditGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private CommercialsEditGrid() : base("LightSwitchApplication.BusinessRelations.DesktopClient:CommercialsEditGrid")
        {
            global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static CommercialsEditGrid CreateInstance()
        {
            return new global::LightSwitchApplication.CommercialsEditGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommercialsEditGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommercialsEditGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommercialsEditGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommercialsEditGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommercialsEditGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommercialsEditGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommercialsEditGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Commercials_SelectionChanged();

        partial void Commercials_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Commercials_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Commercials visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Commercial> Commercials
        {
            get
            {
                return global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.PropertySetProperties.Commercials);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Commercials_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the gridAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void gridAddAndEditNew()
        {
            this.Details.Methods.gridAddAndEditNew.CreateInvocation().Execute();
        }
        partial void gridAddAndEditNew_CanExecute(ref bool result);
        partial void gridAddAndEditNew_Execute();

        /// <summary>
        /// Calls the gridEditSelected screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void gridEditSelected()
        {
            this.Details.Methods.gridEditSelected.CreateInvocation().Execute();
        }
        partial void gridEditSelected_CanExecute(ref bool result);
        partial void gridEditSelected_Execute();

        /// <summary>
        /// Calls the gridDeleteSelected screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void gridDeleteSelected()
        {
            this.Details.Methods.gridDeleteSelected.CreateInvocation().Execute();
        }
        partial void gridDeleteSelected_CanExecute(ref bool result);
        partial void gridDeleteSelected_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.PropertySet, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.CommandSet, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.PropertySetProperties.Commercials;
                var initializeCommandEntry = global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.CommandSetProperties.gridAddAndEditNew;
                var initializeMethodEntry = global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.MethodSetProperties.gridAddAndEditNew;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Entry
                __CommercialsEditGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.__CommercialsEditGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.__CommercialsEditGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.__CommercialsEditGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.__CommercialsEditGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.__CommercialsEditGrid_InvokeCreated,
                    global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.__CommercialsEditGrid_InvokeActivated,
                    global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.__CommercialsEditGrid_InvokeSaveErrorEvent);
            private static void __CommercialsEditGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.CommercialsEditGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.CommercialsEditGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __CommercialsEditGrid_InvokeSavingEvent(global::LightSwitchApplication.CommercialsEditGrid s)
            {
                bool handled = false;
                s.CommercialsEditGrid_Saving(ref handled);
                return handled;
            }
            private static void __CommercialsEditGrid_InvokeSavedEvent(global::LightSwitchApplication.CommercialsEditGrid s)
            {
                s.CommercialsEditGrid_Saved();
            }
            private static bool __CommercialsEditGrid_InvokeClosingEvent(global::LightSwitchApplication.CommercialsEditGrid s)
            {
                bool cancel = false;
                s.CommercialsEditGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __CommercialsEditGrid_InvokeCreated(global::LightSwitchApplication.CommercialsEditGrid s)
            {
                s.CommercialsEditGrid_Created();
            }
            private static void __CommercialsEditGrid_InvokeActivated(global::LightSwitchApplication.CommercialsEditGrid s)
            {
                s.CommercialsEditGrid_Activated();
            }
            private static bool __CommercialsEditGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.CommercialsEditGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.CommercialsEditGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable CommercialsQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Commercials;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass, global::LightSwitchApplication.Commercial>.Data _Commercials;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Data _gridAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Data _gridEditSelectedCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Data _gridDeleteSelectedCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Data _gridAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Data _gridEditSelectedMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Data _gridDeleteSelectedMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass, global::LightSwitchApplication.Commercial> Commercials
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass, global::LightSwitchApplication.Commercial>)base.GetItem(global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.PropertySetProperties.Commercials);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass> gridAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.CommandSetProperties.gridAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass> gridEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.CommandSetProperties.gridEditSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass> gridDeleteSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.CommandSetProperties.gridDeleteSelected);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass> gridAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.MethodSetProperties.gridAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass> gridEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.MethodSetProperties.gridEditSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass> gridDeleteSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>)base.GetItem(global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.MethodSetProperties.gridDeleteSelected);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass, global::LightSwitchApplication.Commercial>.Entry
                    Commercials = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass, global::LightSwitchApplication.Commercial>.Entry(
                        "Commercials",
                        global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.PropertySetProperties._Commercials_Stub,
                        global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.PropertySetProperties._Commercials_Validate,
                        global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.PropertySetProperties._Commercials_CreateQuery,
                        global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.PropertySetProperties._Commercials_SelectionChanged,
                        global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.PropertySetProperties._Commercials_OnCollectionChanged,
                        global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.PropertySetProperties._Commercials_OnLoaded);
                private static void _Commercials_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CommercialsEditGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass, global::LightSwitchApplication.Commercial>.Data> c, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Commercials, sf);
                }
                private static void _Commercials_Validate(global::LightSwitchApplication.CommercialsEditGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Commercials_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Commercials_CreateQuery(global::LightSwitchApplication.CommercialsEditGrid.DetailsClass d, object[] args)
                {
                    return d.CommercialsQuery();
                }
                private static void _Commercials_SelectionChanged(global::LightSwitchApplication.CommercialsEditGrid s)
                {
                    s.Commercials_SelectionChanged();
                }
                private static void _Commercials_OnCollectionChanged(global::LightSwitchApplication.CommercialsEditGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Commercials_Changed(e);
                }
                private static void _Commercials_OnLoaded(global::LightSwitchApplication.CommercialsEditGrid s, bool succeeded)
                {
                    s.Commercials_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Entry
                    gridAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Entry(
                        "gridAddAndEditNew",
                        global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.CommandSetProperties._gridAddAndEditNew_Stub,
                        global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.CommandSetProperties._gridAddAndEditNew_CreateExecutableObject);
                private static void _gridAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CommercialsEditGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Data> c, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _gridAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.CommercialsEditGrid.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.CommercialsEditGrid.DetailsClass)d).Methods.gridAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Entry
                    gridEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Entry(
                        "gridEditSelected",
                        global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.CommandSetProperties._gridEditSelected_Stub,
                        global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.CommandSetProperties._gridEditSelected_CreateExecutableObject);
                private static void _gridEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CommercialsEditGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Data> c, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._gridEditSelectedCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _gridEditSelected_CreateExecutableObject(global::LightSwitchApplication.CommercialsEditGrid.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.CommercialsEditGrid.DetailsClass)d).Methods.gridEditSelected.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Entry
                    gridDeleteSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Entry(
                        "gridDeleteSelected",
                        global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.CommandSetProperties._gridDeleteSelected_Stub,
                        global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.CommandSetProperties._gridDeleteSelected_CreateExecutableObject);
                private static void _gridDeleteSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CommercialsEditGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Data> c, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._gridDeleteSelectedCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _gridDeleteSelected_CreateExecutableObject(global::LightSwitchApplication.CommercialsEditGrid.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.CommercialsEditGrid.DetailsClass)d).Methods.gridDeleteSelected.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Entry
                    gridAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Entry(
                        "gridAddAndEditNew",
                        global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.MethodSetProperties._gridAddAndEditNew_Stub,
                        global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.MethodSetProperties._gridAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.MethodSetProperties._gridAddAndEditNew_InvokeMethod);
                private static void _gridAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CommercialsEditGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Data> c, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _gridAddAndEditNew_CanInvoke(global::LightSwitchApplication.CommercialsEditGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.gridAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _gridAddAndEditNew_InvokeMethod(global::LightSwitchApplication.CommercialsEditGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.gridAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Entry
                    gridEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Entry(
                        "gridEditSelected",
                        global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.MethodSetProperties._gridEditSelected_Stub,
                        global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.MethodSetProperties._gridEditSelected_CanInvoke,
                        global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.MethodSetProperties._gridEditSelected_InvokeMethod);
                private static void _gridEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CommercialsEditGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Data> c, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._gridEditSelectedMethod, sf);
                }
                private static global::System.Exception _gridEditSelected_CanInvoke(global::LightSwitchApplication.CommercialsEditGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.gridEditSelected_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _gridEditSelected_InvokeMethod(global::LightSwitchApplication.CommercialsEditGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.gridEditSelected_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Entry
                    gridDeleteSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Entry(
                        "gridDeleteSelected",
                        global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.MethodSetProperties._gridDeleteSelected_Stub,
                        global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.MethodSetProperties._gridDeleteSelected_CanInvoke,
                        global::LightSwitchApplication.CommercialsEditGrid.DetailsClass.MethodSetProperties._gridDeleteSelected_InvokeMethod);
                private static void _gridDeleteSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CommercialsEditGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CommercialsEditGrid, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass>.Data> c, global::LightSwitchApplication.CommercialsEditGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._gridDeleteSelectedMethod, sf);
                }
                private static global::System.Exception _gridDeleteSelected_CanInvoke(global::LightSwitchApplication.CommercialsEditGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.gridDeleteSelected_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _gridDeleteSelected_InvokeMethod(global::LightSwitchApplication.CommercialsEditGrid.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.gridDeleteSelected_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class MissionCreateNew
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.MissionCreateNew, global::LightSwitchApplication.MissionCreateNew.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private MissionCreateNew(global::System.Nullable<int> MissionId) : base("LightSwitchApplication.BusinessRelations.DesktopClient:MissionCreateNew")
        {
                this.MissionId = MissionId;
            global::LightSwitchApplication.MissionCreateNew.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static MissionCreateNew CreateInstance(global::System.Nullable<int> MissionId)
        {
            return new global::LightSwitchApplication.MissionCreateNew(
                        MissionId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionCreateNew_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionCreateNew_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionCreateNew_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionCreateNew_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionCreateNew_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionCreateNew_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionCreateNew_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void MissionProperty_Changed();

        partial void MissionId_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Mission MissionProperty
        {
            get 
            {
                return global::LightSwitchApplication.MissionCreateNew.DetailsClass.GetValue(this, global::LightSwitchApplication.MissionCreateNew.DetailsClass.PropertySetProperties.MissionProperty);
            }
            set
            {
                global::LightSwitchApplication.MissionCreateNew.DetailsClass.SetValue(this, global::LightSwitchApplication.MissionCreateNew.DetailsClass.PropertySetProperties.MissionProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> MissionId
        {
            get 
            {
                return global::LightSwitchApplication.MissionCreateNew.DetailsClass.GetValue(this, global::LightSwitchApplication.MissionCreateNew.DetailsClass.PropertySetProperties.MissionId);
            }
            set
            {
                global::LightSwitchApplication.MissionCreateNew.DetailsClass.SetValue(this, global::LightSwitchApplication.MissionCreateNew.DetailsClass.PropertySetProperties.MissionId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.MissionCreateNew, global::LightSwitchApplication.MissionCreateNew.DetailsClass, global::LightSwitchApplication.MissionCreateNew.DetailsClass.PropertySet, global::LightSwitchApplication.MissionCreateNew.DetailsClass.CommandSet, global::LightSwitchApplication.MissionCreateNew.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.MissionCreateNew.DetailsClass.PropertySetProperties.MissionProperty;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.MissionCreateNew, global::LightSwitchApplication.MissionCreateNew.DetailsClass>.Entry
                __MissionCreateNewEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.MissionCreateNew, global::LightSwitchApplication.MissionCreateNew.DetailsClass>.Entry(
                    global::LightSwitchApplication.MissionCreateNew.DetailsClass.__MissionCreateNew_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.MissionCreateNew.DetailsClass.__MissionCreateNew_InvokeSavingEvent,
                    global::LightSwitchApplication.MissionCreateNew.DetailsClass.__MissionCreateNew_InvokeSavedEvent,
                    global::LightSwitchApplication.MissionCreateNew.DetailsClass.__MissionCreateNew_InvokeClosingEvent,
                    global::LightSwitchApplication.MissionCreateNew.DetailsClass.__MissionCreateNew_InvokeCreated,
                    global::LightSwitchApplication.MissionCreateNew.DetailsClass.__MissionCreateNew_InvokeActivated,
                    global::LightSwitchApplication.MissionCreateNew.DetailsClass.__MissionCreateNew_InvokeSaveErrorEvent);
            private static void __MissionCreateNew_InvokeInitializeDataWorkspace(global::LightSwitchApplication.MissionCreateNew s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.MissionCreateNew_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __MissionCreateNew_InvokeSavingEvent(global::LightSwitchApplication.MissionCreateNew s)
            {
                bool handled = false;
                s.MissionCreateNew_Saving(ref handled);
                return handled;
            }
            private static void __MissionCreateNew_InvokeSavedEvent(global::LightSwitchApplication.MissionCreateNew s)
            {
                s.MissionCreateNew_Saved();
            }
            private static bool __MissionCreateNew_InvokeClosingEvent(global::LightSwitchApplication.MissionCreateNew s)
            {
                bool cancel = false;
                s.MissionCreateNew_Closing(ref cancel);
                return cancel;
            }
            private static void __MissionCreateNew_InvokeCreated(global::LightSwitchApplication.MissionCreateNew s)
            {
                s.MissionCreateNew_Created();
            }
            private static void __MissionCreateNew_InvokeActivated(global::LightSwitchApplication.MissionCreateNew s)
            {
                s.MissionCreateNew_Activated();
            }
            private static bool __MissionCreateNew_InvokeSaveErrorEvent(global::LightSwitchApplication.MissionCreateNew s, global::System.Exception ex)
            {
                bool handled = false;
                s.MissionCreateNew_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.MissionCreateNew.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.MissionCreateNew.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.MissionCreateNew.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MissionCreateNew, global::LightSwitchApplication.MissionCreateNew.DetailsClass, global::LightSwitchApplication.Mission>.Data _MissionProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MissionCreateNew, global::LightSwitchApplication.MissionCreateNew.DetailsClass, global::System.Nullable<int>>.Data _MissionId;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.MissionCreateNew, global::LightSwitchApplication.MissionCreateNew.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MissionCreateNew, global::LightSwitchApplication.MissionCreateNew.DetailsClass, global::LightSwitchApplication.Mission> MissionProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MissionCreateNew, global::LightSwitchApplication.MissionCreateNew.DetailsClass, global::LightSwitchApplication.Mission>)base.GetItem(global::LightSwitchApplication.MissionCreateNew.DetailsClass.PropertySetProperties.MissionProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MissionCreateNew, global::LightSwitchApplication.MissionCreateNew.DetailsClass, global::System.Nullable<int>> MissionId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MissionCreateNew, global::LightSwitchApplication.MissionCreateNew.DetailsClass, global::System.Nullable<int>>)base.GetItem(global::LightSwitchApplication.MissionCreateNew.DetailsClass.PropertySetProperties.MissionId);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.MissionCreateNew, global::LightSwitchApplication.MissionCreateNew.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.MissionCreateNew, global::LightSwitchApplication.MissionCreateNew.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MissionCreateNew, global::LightSwitchApplication.MissionCreateNew.DetailsClass, global::LightSwitchApplication.Mission>.Entry
                    MissionProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MissionCreateNew, global::LightSwitchApplication.MissionCreateNew.DetailsClass, global::LightSwitchApplication.Mission>.Entry(
                        "MissionProperty",
                        false,
                        global::LightSwitchApplication.MissionCreateNew.DetailsClass.PropertySetProperties._MissionProperty_Stub,
                        global::LightSwitchApplication.MissionCreateNew.DetailsClass.PropertySetProperties._MissionProperty_Validate,
                        global::LightSwitchApplication.MissionCreateNew.DetailsClass.PropertySetProperties._MissionProperty_OnValueChanged);
                private static void _MissionProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MissionCreateNew.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MissionCreateNew, global::LightSwitchApplication.MissionCreateNew.DetailsClass, global::LightSwitchApplication.Mission>.Data> c, global::LightSwitchApplication.MissionCreateNew.DetailsClass d, object sf)
                {
                    c(d, ref d._MissionProperty, sf);
                }
                private static void _MissionProperty_Validate(global::LightSwitchApplication.MissionCreateNew s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.MissionProperty_Validate(r);
                }
                private static void _MissionProperty_OnValueChanged(global::LightSwitchApplication.MissionCreateNew s)
                {
                    s.MissionProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MissionCreateNew, global::LightSwitchApplication.MissionCreateNew.DetailsClass, global::System.Nullable<int>>.Entry
                    MissionId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MissionCreateNew, global::LightSwitchApplication.MissionCreateNew.DetailsClass, global::System.Nullable<int>>.Entry(
                        "MissionId",
                        false,
                        global::LightSwitchApplication.MissionCreateNew.DetailsClass.PropertySetProperties._MissionId_Stub,
                        global::LightSwitchApplication.MissionCreateNew.DetailsClass.PropertySetProperties._MissionId_Validate,
                        global::LightSwitchApplication.MissionCreateNew.DetailsClass.PropertySetProperties._MissionId_OnValueChanged);
                private static void _MissionId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MissionCreateNew.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MissionCreateNew, global::LightSwitchApplication.MissionCreateNew.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.MissionCreateNew.DetailsClass d, object sf)
                {
                    c(d, ref d._MissionId, sf);
                }
                private static void _MissionId_Validate(global::LightSwitchApplication.MissionCreateNew s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.MissionId_Validate(r);
                }
                private static void _MissionId_OnValueChanged(global::LightSwitchApplication.MissionCreateNew s)
                {
                    s.MissionId_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class MissionEnCoursSearch
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private MissionEnCoursSearch() : base("LightSwitchApplication.BusinessRelations.DesktopClient:MissionEnCoursSearch")
        {
            global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static MissionEnCoursSearch CreateInstance()
        {
            return new global::LightSwitchApplication.MissionEnCoursSearch(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionEnCoursSearch_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionEnCoursSearch_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionEnCoursSearch_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionEnCoursSearch_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionEnCoursSearch_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionEnCoursSearch_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionEnCoursSearch_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void MissionEnCours_SelectionChanged();

        partial void MissionEnCours_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionEnCours_Loaded(bool succeeded);

        /// <summary>
        /// Gets the MissionEnCours visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Mission> MissionEnCours
        {
            get
            {
                return global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.GetValue(this, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.PropertySetProperties.MissionEnCours);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionEnCours_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the AddMission screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddMission()
        {
            this.Details.Methods.AddMission.CreateInvocation().Execute();
        }
        partial void AddMission_CanExecute(ref bool result);
        partial void AddMission_Execute();

        /// <summary>
        /// Calls the gridAddNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void gridAddNew()
        {
            this.Details.Methods.gridAddNew.CreateInvocation().Execute();
        }
        partial void gridAddNew_CanExecute(ref bool result);
        partial void gridAddNew_Execute();

        /// <summary>
        /// Calls the gridEditSelected screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void gridEditSelected()
        {
            this.Details.Methods.gridEditSelected.CreateInvocation().Execute();
        }
        partial void gridEditSelected_CanExecute(ref bool result);
        partial void gridEditSelected_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.PropertySet, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.CommandSet, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.PropertySetProperties.MissionEnCours;
                var initializeCommandEntry = global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.CommandSetProperties.AddMission;
                var initializeMethodEntry = global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.MethodSetProperties.AddMission;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Entry
                __MissionEnCoursSearchEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Entry(
                    global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.__MissionEnCoursSearch_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.__MissionEnCoursSearch_InvokeSavingEvent,
                    global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.__MissionEnCoursSearch_InvokeSavedEvent,
                    global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.__MissionEnCoursSearch_InvokeClosingEvent,
                    global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.__MissionEnCoursSearch_InvokeCreated,
                    global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.__MissionEnCoursSearch_InvokeActivated,
                    global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.__MissionEnCoursSearch_InvokeSaveErrorEvent);
            private static void __MissionEnCoursSearch_InvokeInitializeDataWorkspace(global::LightSwitchApplication.MissionEnCoursSearch s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.MissionEnCoursSearch_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __MissionEnCoursSearch_InvokeSavingEvent(global::LightSwitchApplication.MissionEnCoursSearch s)
            {
                bool handled = false;
                s.MissionEnCoursSearch_Saving(ref handled);
                return handled;
            }
            private static void __MissionEnCoursSearch_InvokeSavedEvent(global::LightSwitchApplication.MissionEnCoursSearch s)
            {
                s.MissionEnCoursSearch_Saved();
            }
            private static bool __MissionEnCoursSearch_InvokeClosingEvent(global::LightSwitchApplication.MissionEnCoursSearch s)
            {
                bool cancel = false;
                s.MissionEnCoursSearch_Closing(ref cancel);
                return cancel;
            }
            private static void __MissionEnCoursSearch_InvokeCreated(global::LightSwitchApplication.MissionEnCoursSearch s)
            {
                s.MissionEnCoursSearch_Created();
            }
            private static void __MissionEnCoursSearch_InvokeActivated(global::LightSwitchApplication.MissionEnCoursSearch s)
            {
                s.MissionEnCoursSearch_Activated();
            }
            private static bool __MissionEnCoursSearch_InvokeSaveErrorEvent(global::LightSwitchApplication.MissionEnCoursSearch s, global::System.Exception ex)
            {
                bool handled = false;
                s.MissionEnCoursSearch_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable MissionEnCoursQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        this.Screen.DataWorkspace.ApplicationData.MissionEnCours(),
                        "Commercial"),
                    "Collaborateur");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass, global::LightSwitchApplication.Mission>.Data _MissionEnCours;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Data _AddMissionCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Data _gridAddNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Data _gridEditSelectedCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Data _AddMissionMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Data _gridAddNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Data _gridEditSelectedMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass, global::LightSwitchApplication.Mission> MissionEnCours
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass, global::LightSwitchApplication.Mission>)base.GetItem(global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.PropertySetProperties.MissionEnCours);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass> AddMission
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>)base.GetItem(global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.CommandSetProperties.AddMission);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass> gridAddNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>)base.GetItem(global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.CommandSetProperties.gridAddNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass> gridEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>)base.GetItem(global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.CommandSetProperties.gridEditSelected);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass> AddMission
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>)base.GetItem(global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.MethodSetProperties.AddMission);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass> gridAddNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>)base.GetItem(global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.MethodSetProperties.gridAddNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass> gridEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>)base.GetItem(global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.MethodSetProperties.gridEditSelected);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass, global::LightSwitchApplication.Mission>.Entry
                    MissionEnCours = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass, global::LightSwitchApplication.Mission>.Entry(
                        "MissionEnCours",
                        global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.PropertySetProperties._MissionEnCours_Stub,
                        global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.PropertySetProperties._MissionEnCours_Validate,
                        global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.PropertySetProperties._MissionEnCours_CreateQuery,
                        global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.PropertySetProperties._MissionEnCours_SelectionChanged,
                        global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.PropertySetProperties._MissionEnCours_OnCollectionChanged,
                        global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.PropertySetProperties._MissionEnCours_OnLoaded);
                private static void _MissionEnCours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass, global::LightSwitchApplication.Mission>.Data> c, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass d, object sf)
                {
                    c(d, ref d._MissionEnCours, sf);
                }
                private static void _MissionEnCours_Validate(global::LightSwitchApplication.MissionEnCoursSearch s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.MissionEnCours_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _MissionEnCours_CreateQuery(global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass d, object[] args)
                {
                    return d.MissionEnCoursQuery();
                }
                private static void _MissionEnCours_SelectionChanged(global::LightSwitchApplication.MissionEnCoursSearch s)
                {
                    s.MissionEnCours_SelectionChanged();
                }
                private static void _MissionEnCours_OnCollectionChanged(global::LightSwitchApplication.MissionEnCoursSearch s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.MissionEnCours_Changed(e);
                }
                private static void _MissionEnCours_OnLoaded(global::LightSwitchApplication.MissionEnCoursSearch s, bool succeeded)
                {
                    s.MissionEnCours_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Entry
                    AddMission = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Entry(
                        "AddMission",
                        global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.CommandSetProperties._AddMission_Stub,
                        global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.CommandSetProperties._AddMission_CreateExecutableObject);
                private static void _AddMission_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Data> c, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass d, object sf)
                {
                    c(d, ref d._AddMissionCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddMission_CreateExecutableObject(global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass)d).Methods.AddMission.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Entry
                    gridAddNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Entry(
                        "gridAddNew",
                        global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.CommandSetProperties._gridAddNew_Stub,
                        global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.CommandSetProperties._gridAddNew_CreateExecutableObject);
                private static void _gridAddNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Data> c, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _gridAddNew_CreateExecutableObject(global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass)d).Methods.gridAddNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Entry
                    gridEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Entry(
                        "gridEditSelected",
                        global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.CommandSetProperties._gridEditSelected_Stub,
                        global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.CommandSetProperties._gridEditSelected_CreateExecutableObject);
                private static void _gridEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Data> c, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass d, object sf)
                {
                    c(d, ref d._gridEditSelectedCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _gridEditSelected_CreateExecutableObject(global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass)d).Methods.gridEditSelected.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Entry
                    AddMission = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Entry(
                        "AddMission",
                        global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.MethodSetProperties._AddMission_Stub,
                        global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.MethodSetProperties._AddMission_CanInvoke,
                        global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.MethodSetProperties._AddMission_InvokeMethod);
                private static void _AddMission_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Data> c, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass d, object sf)
                {
                    c(d, ref d._AddMissionMethod, sf);
                }
                private static global::System.Exception _AddMission_CanInvoke(global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddMission_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddMission_InvokeMethod(global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddMission_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Entry
                    gridAddNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Entry(
                        "gridAddNew",
                        global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.MethodSetProperties._gridAddNew_Stub,
                        global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.MethodSetProperties._gridAddNew_CanInvoke,
                        global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.MethodSetProperties._gridAddNew_InvokeMethod);
                private static void _gridAddNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Data> c, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddNewMethod, sf);
                }
                private static global::System.Exception _gridAddNew_CanInvoke(global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.gridAddNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _gridAddNew_InvokeMethod(global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.gridAddNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Entry
                    gridEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Entry(
                        "gridEditSelected",
                        global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.MethodSetProperties._gridEditSelected_Stub,
                        global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.MethodSetProperties._gridEditSelected_CanInvoke,
                        global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass.MethodSetProperties._gridEditSelected_InvokeMethod);
                private static void _gridEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.MissionEnCoursSearch, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass>.Data> c, global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass d, object sf)
                {
                    c(d, ref d._gridEditSelectedMethod, sf);
                }
                private static global::System.Exception _gridEditSelected_CanInvoke(global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.gridEditSelected_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _gridEditSelected_InvokeMethod(global::LightSwitchApplication.MissionEnCoursSearch.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.gridEditSelected_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class MissionByClientListDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.MissionByClientListDetail, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private MissionByClientListDetail() : base("LightSwitchApplication.BusinessRelations.DesktopClient:MissionByClientListDetail")
        {
            global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static MissionByClientListDetail CreateInstance()
        {
            return new global::LightSwitchApplication.MissionByClientListDetail(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionByClientListDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionByClientListDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionByClientListDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionByClientListDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionByClientListDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionByClientListDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionByClientListDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void MissionByClient_SelectionChanged();

        partial void MissionByClient_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionByClient_Loaded(bool succeeded);

        partial void MissionpNomClient_Changed();

        /// <summary>
        /// Gets the MissionByClient visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Mission> MissionByClient
        {
            get
            {
                return global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.PropertySetProperties.MissionByClient);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionByClient_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MissionpNomClient
        {
            get 
            {
                return global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.PropertySetProperties.MissionpNomClient);
            }
            set
            {
                global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.PropertySetProperties.MissionpNomClient, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissionpNomClient_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.MissionByClientListDetail, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.PropertySet, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.CommandSet, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.PropertySetProperties.MissionByClient;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.MissionByClientListDetail, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass>.Entry
                __MissionByClientListDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.MissionByClientListDetail, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.__MissionByClientListDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.__MissionByClientListDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.__MissionByClientListDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.__MissionByClientListDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.__MissionByClientListDetail_InvokeCreated,
                    global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.__MissionByClientListDetail_InvokeActivated,
                    global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.__MissionByClientListDetail_InvokeSaveErrorEvent);
            private static void __MissionByClientListDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.MissionByClientListDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.MissionByClientListDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __MissionByClientListDetail_InvokeSavingEvent(global::LightSwitchApplication.MissionByClientListDetail s)
            {
                bool handled = false;
                s.MissionByClientListDetail_Saving(ref handled);
                return handled;
            }
            private static void __MissionByClientListDetail_InvokeSavedEvent(global::LightSwitchApplication.MissionByClientListDetail s)
            {
                s.MissionByClientListDetail_Saved();
            }
            private static bool __MissionByClientListDetail_InvokeClosingEvent(global::LightSwitchApplication.MissionByClientListDetail s)
            {
                bool cancel = false;
                s.MissionByClientListDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __MissionByClientListDetail_InvokeCreated(global::LightSwitchApplication.MissionByClientListDetail s)
            {
                s.MissionByClientListDetail_Created();
            }
            private static void __MissionByClientListDetail_InvokeActivated(global::LightSwitchApplication.MissionByClientListDetail s)
            {
                s.MissionByClientListDetail_Activated();
            }
            private static bool __MissionByClientListDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.MissionByClientListDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.MissionByClientListDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable MissionByClientQuery(string pNomClient)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        this.Screen.DataWorkspace.ApplicationData.MissionByClient(pNomClient),
                        "Commercial"),
                    "Collaborateur");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MissionByClientListDetail, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass, global::LightSwitchApplication.Mission>.Data _MissionByClient;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MissionByClientListDetail, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass, string>.Data _MissionpNomClient;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.MissionByClientListDetail, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MissionByClientListDetail, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass, global::LightSwitchApplication.Mission> MissionByClient
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MissionByClientListDetail, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass, global::LightSwitchApplication.Mission>)base.GetItem(global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.PropertySetProperties.MissionByClient);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MissionByClientListDetail, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass, string> MissionpNomClient
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MissionByClientListDetail, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.PropertySetProperties.MissionpNomClient);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.MissionByClientListDetail, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.MissionByClientListDetail, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MissionByClientListDetail, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass, global::LightSwitchApplication.Mission>.Entry
                    MissionByClient = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MissionByClientListDetail, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass, global::LightSwitchApplication.Mission>.Entry(
                        "MissionByClient",
                        global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.PropertySetProperties._MissionByClient_Stub,
                        global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.PropertySetProperties._MissionByClient_Validate,
                        global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.PropertySetProperties._MissionByClient_CreateQuery,
                        global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.PropertySetProperties._MissionByClient_SelectionChanged,
                        global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.PropertySetProperties._MissionByClient_OnCollectionChanged,
                        global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.PropertySetProperties._MissionByClient_OnLoaded);
                private static void _MissionByClient_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MissionByClientListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.MissionByClientListDetail, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass, global::LightSwitchApplication.Mission>.Data> c, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._MissionByClient, sf);
                }
                private static void _MissionByClient_Validate(global::LightSwitchApplication.MissionByClientListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.MissionByClient_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _MissionByClient_CreateQuery(global::LightSwitchApplication.MissionByClientListDetail.DetailsClass d, object[] args)
                {
                    return d.MissionByClientQuery((string)args[0]);
                }
                private static void _MissionByClient_SelectionChanged(global::LightSwitchApplication.MissionByClientListDetail s)
                {
                    s.MissionByClient_SelectionChanged();
                }
                private static void _MissionByClient_OnCollectionChanged(global::LightSwitchApplication.MissionByClientListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.MissionByClient_Changed(e);
                }
                private static void _MissionByClient_OnLoaded(global::LightSwitchApplication.MissionByClientListDetail s, bool succeeded)
                {
                    s.MissionByClient_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MissionByClientListDetail, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass, string>.Entry
                    MissionpNomClient = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MissionByClientListDetail, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass, string>.Entry(
                        "MissionpNomClient",
                        false,
                        global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.PropertySetProperties._MissionpNomClient_Stub,
                        global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.PropertySetProperties._MissionpNomClient_Validate,
                        global::LightSwitchApplication.MissionByClientListDetail.DetailsClass.PropertySetProperties._MissionpNomClient_OnValueChanged);
                private static void _MissionpNomClient_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.MissionByClientListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.MissionByClientListDetail, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.MissionByClientListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._MissionpNomClient, sf);
                }
                private static void _MissionpNomClient_Validate(global::LightSwitchApplication.MissionByClientListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.MissionpNomClient_Validate(r);
                }
                private static void _MissionpNomClient_OnValueChanged(global::LightSwitchApplication.MissionByClientListDetail s)
                {
                    s.MissionpNomClient_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
}
