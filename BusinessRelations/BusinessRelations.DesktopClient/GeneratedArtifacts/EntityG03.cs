

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// Cette table contient toutes les missions !
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class Mission : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Mission entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Mission()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Mission(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Mission> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Mission.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Mission_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Mission_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Mission.DetailsClass.GetValue(this, global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Mission.DetailsClass.SetValue(this, global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime dateDebut
        {
            get
            {
                return global::LightSwitchApplication.Mission.DetailsClass.GetValue(this, global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.dateDebut);
            }
            set
            {
                global::LightSwitchApplication.Mission.DetailsClass.SetValue(this, global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.dateDebut, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dateDebut_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dateDebut_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dateDebut_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> dateFin
        {
            get
            {
                return global::LightSwitchApplication.Mission.DetailsClass.GetValue(this, global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.dateFin);
            }
            set
            {
                global::LightSwitchApplication.Mission.DetailsClass.SetValue(this, global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.dateFin, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dateFin_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dateFin_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void dateFin_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string nomClient
        {
            get
            {
                return global::LightSwitchApplication.Mission.DetailsClass.GetValue(this, global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.nomClient);
            }
            set
            {
                global::LightSwitchApplication.Mission.DetailsClass.SetValue(this, global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.nomClient, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nomClient_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nomClient_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nomClient_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string posteOccupe
        {
            get
            {
                return global::LightSwitchApplication.Mission.DetailsClass.GetValue(this, global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.posteOccupe);
            }
            set
            {
                global::LightSwitchApplication.Mission.DetailsClass.SetValue(this, global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.posteOccupe, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void posteOccupe_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void posteOccupe_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void posteOccupe_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.Mission.DetailsClass.GetValue(this, global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return global::LightSwitchApplication.Mission.DetailsClass.GetValue(this, global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.Created);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.Mission.DetailsClass.GetValue(this, global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return global::LightSwitchApplication.Mission.DetailsClass.GetValue(this, global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.Modified);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Mission.DetailsClass.GetValue(this, global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Mission.DetailsClass.SetValue(this, global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string nombreJour
        {
            get
            {
                return global::LightSwitchApplication.Mission.DetailsClass.GetValue(this, global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.nombreJour);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nombreJour_Compute(ref string result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void nombreJour_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Commercial Commercial
        {
            get
            {
                return global::LightSwitchApplication.Mission.DetailsClass.GetValue(this, global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.Commercial);
            }
            set
            {
                global::LightSwitchApplication.Mission.DetailsClass.SetValue(this, global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.Commercial, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Commercial_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Commercial_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Commercial_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Collaborateur Collaborateur
        {
            get
            {
                return global::LightSwitchApplication.Mission.DetailsClass.GetValue(this, global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.Collaborateur);
            }
            set
            {
                global::LightSwitchApplication.Mission.DetailsClass.SetValue(this, global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.Collaborateur, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Collaborateur_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Collaborateur_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Collaborateur_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Mission,
                global::LightSwitchApplication.Mission.DetailsClass,
                global::LightSwitchApplication.Mission.DetailsClass.IImplementation,
                global::LightSwitchApplication.Mission.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass>.Entry
                __MissionEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass>.Entry(
                    global::LightSwitchApplication.Mission.DetailsClass.__Mission_CreateNew,
                    global::LightSwitchApplication.Mission.DetailsClass.__Mission_Created,
                    global::LightSwitchApplication.Mission.DetailsClass.__Mission_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Mission __Mission_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Mission> es)
            {
                return new global::LightSwitchApplication.Mission(es);
            }
            private static void __Mission_Created(global::LightSwitchApplication.Mission e)
            {
                e.Mission_Created();
            }
            private static bool __Mission_AllowSaveWithErrors(global::LightSwitchApplication.Mission e)
            {
                bool result = false;
                e.Mission_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Mission.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.DateTime> dateDebut
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.dateDebut) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.Nullable<global::System.DateTime>> dateFin
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.dateFin) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string> nomClient
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.nomClient) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string> posteOccupe
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.posteOccupe) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Created
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.Created) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Modified
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.Modified) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string> nombreJour
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.nombreJour) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::LightSwitchApplication.Commercial> Commercial
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.Commercial) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::LightSwitchApplication.Commercial>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::LightSwitchApplication.Collaborateur> Collaborateur
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.Collaborateur) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::LightSwitchApplication.Collaborateur>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new global::System.DateTime dateDebut { get; set; }
                new global::System.Nullable<global::System.DateTime> dateFin { get; set; }
                new string nomClient { get; set; }
                new string posteOccupe { get; set; }
                new string CreatedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Created { get; }
                new string ModifiedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Modified { get; }
                new byte[] RowVersion { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Commercial { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Collaborateur { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Mission.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, int>.Data> c, global::LightSwitchApplication.Mission.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Mission e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Mission e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Mission e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.DateTime>.Entry
                    dateDebut = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.DateTime>.Entry(
                        "dateDebut",
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._dateDebut_Stub,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._dateDebut_ComputeIsReadOnly,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._dateDebut_Validate,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._dateDebut_GetImplementationValue,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._dateDebut_SetImplementationValue,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._dateDebut_OnValueChanged);
                private static void _dateDebut_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Mission.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Mission.DetailsClass d, object sf)
                {
                    c(d, ref d._dateDebut, sf);
                }
                private static bool _dateDebut_ComputeIsReadOnly(global::LightSwitchApplication.Mission e)
                {
                    bool result = false;
                    e.dateDebut_IsReadOnly(ref result);
                    return result;
                }
                private static void _dateDebut_Validate(global::LightSwitchApplication.Mission e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.dateDebut_Validate(r);
                }
                private static global::System.DateTime _dateDebut_GetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d)
                {
                    return d.ImplementationEntity.dateDebut;
                }
                private static void _dateDebut_SetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.dateDebut = global::LightSwitchApplication.Mission.DetailsClass.TruncateDate(v);
                }
                private static void _dateDebut_OnValueChanged(global::LightSwitchApplication.Mission e)
                {
                    e.dateDebut_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    dateFin = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "dateFin",
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._dateFin_Stub,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._dateFin_ComputeIsReadOnly,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._dateFin_Validate,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._dateFin_GetImplementationValue,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._dateFin_SetImplementationValue,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._dateFin_OnValueChanged);
                private static void _dateFin_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Mission.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Mission.DetailsClass d, object sf)
                {
                    c(d, ref d._dateFin, sf);
                }
                private static bool _dateFin_ComputeIsReadOnly(global::LightSwitchApplication.Mission e)
                {
                    bool result = false;
                    e.dateFin_IsReadOnly(ref result);
                    return result;
                }
                private static void _dateFin_Validate(global::LightSwitchApplication.Mission e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.dateFin_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _dateFin_GetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d)
                {
                    return d.ImplementationEntity.dateFin;
                }
                private static void _dateFin_SetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.dateFin = global::LightSwitchApplication.Mission.DetailsClass.TruncateDate(v);
                }
                private static void _dateFin_OnValueChanged(global::LightSwitchApplication.Mission e)
                {
                    e.dateFin_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>.Entry
                    nomClient = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>.Entry(
                        "nomClient",
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._nomClient_Stub,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._nomClient_ComputeIsReadOnly,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._nomClient_Validate,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._nomClient_GetImplementationValue,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._nomClient_SetImplementationValue,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._nomClient_OnValueChanged);
                private static void _nomClient_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Mission.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>.Data> c, global::LightSwitchApplication.Mission.DetailsClass d, object sf)
                {
                    c(d, ref d._nomClient, sf);
                }
                private static bool _nomClient_ComputeIsReadOnly(global::LightSwitchApplication.Mission e)
                {
                    bool result = false;
                    e.nomClient_IsReadOnly(ref result);
                    return result;
                }
                private static void _nomClient_Validate(global::LightSwitchApplication.Mission e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.nomClient_Validate(r);
                }
                private static string _nomClient_GetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d)
                {
                    return d.ImplementationEntity.nomClient;
                }
                private static void _nomClient_SetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d, string v)
                {
                    d.ImplementationEntity.nomClient = v;
                }
                private static void _nomClient_OnValueChanged(global::LightSwitchApplication.Mission e)
                {
                    e.nomClient_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>.Entry
                    posteOccupe = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>.Entry(
                        "posteOccupe",
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._posteOccupe_Stub,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._posteOccupe_ComputeIsReadOnly,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._posteOccupe_Validate,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._posteOccupe_GetImplementationValue,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._posteOccupe_SetImplementationValue,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._posteOccupe_OnValueChanged);
                private static void _posteOccupe_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Mission.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>.Data> c, global::LightSwitchApplication.Mission.DetailsClass d, object sf)
                {
                    c(d, ref d._posteOccupe, sf);
                }
                private static bool _posteOccupe_ComputeIsReadOnly(global::LightSwitchApplication.Mission e)
                {
                    bool result = false;
                    e.posteOccupe_IsReadOnly(ref result);
                    return result;
                }
                private static void _posteOccupe_Validate(global::LightSwitchApplication.Mission e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.posteOccupe_Validate(r);
                }
                private static string _posteOccupe_GetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d)
                {
                    return d.ImplementationEntity.posteOccupe;
                }
                private static void _posteOccupe_SetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d, string v)
                {
                    d.ImplementationEntity.posteOccupe = v;
                }
                private static void _posteOccupe_OnValueChanged(global::LightSwitchApplication.Mission e)
                {
                    e.posteOccupe_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Mission.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>.Data> c, global::LightSwitchApplication.Mission.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.Mission e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.Mission e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.Mission e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Created = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Created",
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Created_Stub,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Created_ComputeIsReadOnly,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Created_Validate,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Created_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Created_OnValueChanged);
                private static void _Created_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Mission.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.Mission.DetailsClass d, object sf)
                {
                    c(d, ref d._Created, sf);
                }
                private static bool _Created_ComputeIsReadOnly(global::LightSwitchApplication.Mission e)
                {
                    bool result = false;
                    e.Created_IsReadOnly(ref result);
                    return result;
                }
                private static void _Created_Validate(global::LightSwitchApplication.Mission e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Created_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Created_GetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d)
                {
                    return d.ImplementationEntity.Created;
                }
                private static void _Created_OnValueChanged(global::LightSwitchApplication.Mission e)
                {
                    e.Created_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Mission.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>.Data> c, global::LightSwitchApplication.Mission.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.Mission e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.Mission e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static string _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.Mission e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Modified = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Modified",
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Modified_Stub,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Modified_ComputeIsReadOnly,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Modified_Validate,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Modified_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Modified_OnValueChanged);
                private static void _Modified_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Mission.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.Mission.DetailsClass d, object sf)
                {
                    c(d, ref d._Modified, sf);
                }
                private static bool _Modified_ComputeIsReadOnly(global::LightSwitchApplication.Mission e)
                {
                    bool result = false;
                    e.Modified_IsReadOnly(ref result);
                    return result;
                }
                private static void _Modified_Validate(global::LightSwitchApplication.Mission e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Modified_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Modified_GetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d)
                {
                    return d.ImplementationEntity.Modified;
                }
                private static void _Modified_OnValueChanged(global::LightSwitchApplication.Mission e)
                {
                    e.Modified_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Mission.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Mission.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Mission e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Mission e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Mission e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>.Entry
                    nombreJour = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>.Entry(
                        "nombreJour",
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._nombreJour_Stub,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._nombreJour_Validate,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._nombreJour_ComputeValue);
                private static void _nombreJour_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Mission.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>.Data> c, global::LightSwitchApplication.Mission.DetailsClass d, object sf)
                {
                    c(d, ref d._nombreJour, sf);
                }
                private static void _nombreJour_Validate(global::LightSwitchApplication.Mission e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.nombreJour_Validate(r);
                }
                private static string _nombreJour_ComputeValue(global::LightSwitchApplication.Mission e)
                {
                    string value = default(string);
                    e.nombreJour_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::LightSwitchApplication.Commercial>.Entry
                    Commercial = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::LightSwitchApplication.Commercial>.Entry(
                        "Commercial",
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Commercial_Stub,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Commercial_ComputeIsReadOnly,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Commercial_Validate,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Commercial_GetCoreImplementationValue,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Commercial_GetImplementationValue,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Commercial_SetImplementationValue,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Commercial_Refresh,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Commercial_OnValueChanged);
                private static void _Commercial_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Mission.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::LightSwitchApplication.Commercial>.Data> c, global::LightSwitchApplication.Mission.DetailsClass d, object sf)
                {
                    c(d, ref d._Commercial, sf);
                }
                private static bool _Commercial_ComputeIsReadOnly(global::LightSwitchApplication.Mission e)
                {
                    bool result = false;
                    e.Commercial_IsReadOnly(ref result);
                    return result;
                }
                private static void _Commercial_Validate(global::LightSwitchApplication.Mission e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Commercial_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Commercial_GetCoreImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d)
                {
                    return d.ImplementationEntity.Commercial;
                }
                private static global::LightSwitchApplication.Commercial _Commercial_GetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Commercial, global::LightSwitchApplication.Commercial.DetailsClass>(global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.Commercial, ref d._Commercial);
                }
                private static void _Commercial_SetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d, global::LightSwitchApplication.Commercial v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.Commercial, ref d._Commercial, (i, ev) => i.Commercial = ev, v);
                }
                private static void _Commercial_Refresh(global::LightSwitchApplication.Mission.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.Commercial, ref d._Commercial);
                }
                private static void _Commercial_OnValueChanged(global::LightSwitchApplication.Mission e)
                {
                    e.Commercial_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::LightSwitchApplication.Collaborateur>.Entry
                    Collaborateur = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::LightSwitchApplication.Collaborateur>.Entry(
                        "Collaborateur",
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Collaborateur_Stub,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Collaborateur_ComputeIsReadOnly,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Collaborateur_Validate,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Collaborateur_GetCoreImplementationValue,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Collaborateur_GetImplementationValue,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Collaborateur_SetImplementationValue,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Collaborateur_Refresh,
                        global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties._Collaborateur_OnValueChanged);
                private static void _Collaborateur_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Mission.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::LightSwitchApplication.Collaborateur>.Data> c, global::LightSwitchApplication.Mission.DetailsClass d, object sf)
                {
                    c(d, ref d._Collaborateur, sf);
                }
                private static bool _Collaborateur_ComputeIsReadOnly(global::LightSwitchApplication.Mission e)
                {
                    bool result = false;
                    e.Collaborateur_IsReadOnly(ref result);
                    return result;
                }
                private static void _Collaborateur_Validate(global::LightSwitchApplication.Mission e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Collaborateur_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Collaborateur_GetCoreImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d)
                {
                    return d.ImplementationEntity.Collaborateur;
                }
                private static global::LightSwitchApplication.Collaborateur _Collaborateur_GetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Collaborateur, global::LightSwitchApplication.Collaborateur.DetailsClass>(global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.Collaborateur, ref d._Collaborateur);
                }
                private static void _Collaborateur_SetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass d, global::LightSwitchApplication.Collaborateur v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.Collaborateur, ref d._Collaborateur, (i, ev) => i.Collaborateur = ev, v);
                }
                private static void _Collaborateur_Refresh(global::LightSwitchApplication.Mission.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Mission.DetailsClass.PropertySetProperties.Collaborateur, ref d._Collaborateur);
                }
                private static void _Collaborateur_OnValueChanged(global::LightSwitchApplication.Mission e)
                {
                    e.Collaborateur_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.DateTime>.Data _dateDebut;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _dateFin;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>.Data _nomClient;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>.Data _posteOccupe;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Created;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Modified;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, string>.Data _nombreJour;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::LightSwitchApplication.Commercial>.Data _Commercial;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Mission, global::LightSwitchApplication.Mission.DetailsClass, global::LightSwitchApplication.Collaborateur>.Data _Collaborateur;
            
        }
    
        #endregion
    }
    
    #endregion
}
